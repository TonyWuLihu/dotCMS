
//gradle -b deploy.gradle uploadArchives -PgroupId=com.dotcms -PincludeDependencies=true -Pusername=userName -Ppassword=XYZ -Pfile=/file/path/dotcms_3.0.jar
//gradle -b deploy.gradle uploadArchives -PgroupId=com.dotcms -PincludeDependencies=true -Prelease=true -Pusername=userName -Ppassword=XYZ -Pfile=/file/path/dotcms_3.0.jar
//gradle -b deploy.gradle uploadArchives -PgroupId=com.dotcms.enterprise -Pusername=userName -Ppassword=XYZ -Pfile=/file/path/ee_3.0.jar
//File Name: XYZ_version.jar

apply plugin: 'maven'
apply plugin: 'application'

import org.gradle.api.internal.artifacts.publish.DefaultPublishArtifact

repositories {
    maven {
        url "http://repo.dotcms.com/artifactory/libs-release"
    }
}

ext {
    releaseRepository = "http://repo.dotcms.com/artifactory/libs-release-local"
    snapshotRepository = "http://repo.dotcms.com/artifactory/libs-snapshot-local"
    repositoryUrl = snapshotRepository

    groupId = "$groupId"
    fileToUpload = "$file"

    releaseUpload = "false"
    if (project.hasProperty('release')) {
        releaseUpload = "$release"
    }

    //true if we want to add all the dotcms dependencies to the generated pom file
    useDependencies = "false"
    if (project.hasProperty('includeDependencies')) {
        useDependencies = "$includeDependencies"
    }

    username = "$username"
    password = "$password"
}

//We will only apply the dependencies for the dotcms_version.jar, adding these dependencies affects the creation of the pom file for this artifact
if (useDependencies == "true") {
    //Import and apply the dependencies from the dependencies scripts
    apply from: "$rootDir/dependencies.gradle"
}

File toUpload

artifacts {
    toUpload = file(new File(fileToUpload))
    def extension = toUpload.name.substring(toUpload.name.lastIndexOf(".") + 1, toUpload.name.length())
    def fileName = toUpload.name.replace("." + extension, "")

    archives new DefaultPublishArtifact(fileName, extension, extension, null, new Date(), toUpload)
}

uploadArchives() {
    repositories {
        mavenDeployer {

            def isRelease = false
            if (releaseUpload == "true") {
                isRelease = true
            }

            def extension = toUpload.name.substring(toUpload.name.lastIndexOf(".") + 1, toUpload.name.length())
            def fileName = toUpload.name.replace("." + extension, "")
            def nameArray = fileName.split("_")
            def artifactId = nameArray[0]
            def version = nameArray[1]
            //Required for artifactory in order to upload it to the snapshots repo, without it the upload fails
            if (!isRelease) {
                version += "-SNAPSHOT"
            }

            //Verify if we are releasing or just creating a snapshot
            if (isRelease) {
                repositoryUrl = releaseRepository
            }

            addFilter(fileName) { artifact, file ->
                artifact.name == fileName
            }

            //Setting the properties for the pom and artifactory
            pom(fileName).artifactId = artifactId
            pom(fileName).version = version
            pom(fileName).groupId = groupId

            //Some feedback
            println " --> Preparing to upload: " + fileName
            println "\tgroupId: " + groupId
            println "\tartifactId: " + artifactId
            println "\tversion: " + version
            println "\trepository: " + repositoryUrl

            repository(url: repositoryUrl) {
                authentication(userName: username, password: password)
            }
        }

    }
}